<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'jms_serializer' shared service.

include_once $this->targetDirs[3].'/vendor/jms/metadata/src/Metadata/Driver/DriverInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/metadata/src/Metadata/Driver/LazyLoadingDriver.php';
include_once $this->targetDirs[3].'/vendor/jms/metadata/src/Metadata/Cache/CacheInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/metadata/src/Metadata/Cache/FileCache.php';
include_once $this->targetDirs[3].'/vendor/jms/metadata/src/Metadata/MetadataFactoryInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/metadata/src/Metadata/AdvancedMetadataFactoryInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/metadata/src/Metadata/MetadataFactory.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/Naming/PropertyNamingStrategyInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/Naming/CamelCaseNamingStrategy.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/Naming/SerializedNameAnnotationStrategy.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/Naming/CacheNamingStrategy.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/Accessor/AccessorStrategyInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/Accessor/DefaultAccessorStrategy.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/VisitorInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/AbstractVisitor.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/GenericSerializationVisitor.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/JsonSerializationVisitor.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/XmlSerializationVisitor.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/YamlSerializationVisitor.php';
include_once $this->targetDirs[3].'/vendor/phpcollection/phpcollection/src/PhpCollection/AbstractCollection.php';
include_once $this->targetDirs[3].'/vendor/phpcollection/phpcollection/src/PhpCollection/CollectionInterface.php';
include_once $this->targetDirs[3].'/vendor/phpcollection/phpcollection/src/PhpCollection/MapInterface.php';
include_once $this->targetDirs[3].'/vendor/phpcollection/phpcollection/src/PhpCollection/AbstractMap.php';
include_once $this->targetDirs[3].'/vendor/phpcollection/phpcollection/src/PhpCollection/SortableInterface.php';
include_once $this->targetDirs[3].'/vendor/phpcollection/phpcollection/src/PhpCollection/Map.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/GenericDeserializationVisitor.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/JsonDeserializationVisitor.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/NullAwareVisitorInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/XmlDeserializationVisitor.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/EventDispatcher/EventDispatcherInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/EventDispatcher/EventDispatcher.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/EventDispatcher/LazyEventDispatcher.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/SerializerInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/ArrayTransformerInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/Serializer.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/Construction/ObjectConstructorInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/Construction/UnserializeObjectConstructor.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/ContextFactory/SerializationContextFactoryInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer/src/JMS/Serializer/ContextFactory/DeserializationContextFactoryInterface.php';
include_once $this->targetDirs[3].'/vendor/jms/serializer-bundle/ContextFactory/ConfiguredContextFactory.php';

$a = new \Metadata\MetadataFactory(new \Metadata\Driver\LazyLoadingDriver($this, 'jms_serializer.metadata_driver'), 'Metadata\\ClassHierarchyMetadata', true);
$a->setCache(new \Metadata\Cache\FileCache(($this->targetDirs[0].'/jms_serializer')));

$b = new \JMS\Serializer\Naming\CacheNamingStrategy(new \JMS\Serializer\Naming\SerializedNameAnnotationStrategy(new \JMS\Serializer\Naming\CamelCaseNamingStrategy('_', true)));

$c = new \JMS\Serializer\Accessor\DefaultAccessorStrategy();

$d = new \JMS\Serializer\JsonSerializationVisitor($b, $c);
$d->setOptions(1216);

$e = new \JMS\Serializer\XmlSerializationVisitor($b, $c);
$e->setFormatOutput(true);

$f = new \JMS\Serializer\XmlDeserializationVisitor($b);
$f->setDoctypeWhitelist(array());

$g = new \JMS\Serializer\EventDispatcher\LazyEventDispatcher(new \Symfony\Component\DependencyInjection\ServiceLocator(array('jms_serializer.doctrine_proxy_subscriber' => function () {
    return ($this->services['jms_serializer.doctrine_proxy_subscriber'] ?? $this->services['jms_serializer.doctrine_proxy_subscriber'] = new \JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber(true, false));
})));
$g->setListeners(array('serializer.pre_serialize' => array(0 => array(0 => array(0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerializeTypedProxy'), 1 => NULL, 2 => NULL), 1 => array(0 => array(0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerialize'), 1 => NULL, 2 => NULL))));

$this->services['jms_serializer'] = $instance = new \JMS\Serializer\Serializer($a, ($this->services['fos_rest.serializer.jms_handler_registry'] ?? $this->load('getFosRest_Serializer_JmsHandlerRegistryService.php')), ($this->privates['jms_serializer.unserialize_object_constructor'] ?? $this->privates['jms_serializer.unserialize_object_constructor'] = new \JMS\Serializer\Construction\UnserializeObjectConstructor()), new \PhpCollection\Map(array('json' => $d, 'xml' => $e, 'yml' => new \JMS\Serializer\YamlSerializationVisitor($b, $c))), new \PhpCollection\Map(array('json' => new \JMS\Serializer\JsonDeserializationVisitor($b), 'xml' => $f)), $g, NULL, NULL);

$instance->setSerializationContextFactory(($this->services['jms_serializer.serialization_context_factory'] ?? $this->services['jms_serializer.serialization_context_factory'] = new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory()));
$instance->setDeserializationContextFactory(($this->services['jms_serializer.deserialization_context_factory'] ?? $this->services['jms_serializer.deserialization_context_factory'] = new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory()));

return $instance;
